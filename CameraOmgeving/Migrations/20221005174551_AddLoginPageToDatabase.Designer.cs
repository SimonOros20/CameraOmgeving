// <auto-generated />
using System;
using CameraOmgeving.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CameraOmgeving.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221005174551_AddLoginPageToDatabase")]
    partial class AddLoginPageToDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CameraOmgeving.Models.Camera", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("locationID")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("locationID");

                    b.ToTable("cameras");
                });

            modelBuilder.Entity("CameraOmgeving.Models.Location", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("cameraID")
                        .HasColumnType("int");

                    b.Property<int?>("mapId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("mapId");

                    b.ToTable("locations");
                });

            modelBuilder.Entity("CameraOmgeving.Models.Map", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("LocationID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userID");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("CameraOmgeving.Models.Profile", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("CameraOmgeving.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("ProfileID")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ProfileID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CameraOmgeving.Models.Camera", b =>
                {
                    b.HasOne("CameraOmgeving.Models.Location", "Location")
                        .WithMany("Cameras")
                        .HasForeignKey("locationID");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("CameraOmgeving.Models.Location", b =>
                {
                    b.HasOne("CameraOmgeving.Models.Map", "Map")
                        .WithMany("Locations")
                        .HasForeignKey("mapId");

                    b.Navigation("Map");
                });

            modelBuilder.Entity("CameraOmgeving.Models.Map", b =>
                {
                    b.HasOne("CameraOmgeving.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CameraOmgeving.Models.User", b =>
                {
                    b.HasOne("CameraOmgeving.Models.Profile", "Profile")
                        .WithMany("users")
                        .HasForeignKey("ProfileID");

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("CameraOmgeving.Models.Location", b =>
                {
                    b.Navigation("Cameras");
                });

            modelBuilder.Entity("CameraOmgeving.Models.Map", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("CameraOmgeving.Models.Profile", b =>
                {
                    b.Navigation("users");
                });
#pragma warning restore 612, 618
        }
    }
}
